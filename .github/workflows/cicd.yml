name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s --health-timeout=5s --health-retries=5
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set up test .env file
        run: cp .env.example .env

      - name: Run tests
        run: npm test
        env:
          MONGODB_URI: mongodb://localhost:27017/test-db
  
  
  sast:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install ESLint
        run: npm install eslint --save-dev

      - name: Run ESLint (SAST)
        run: npx eslint src/**/*.ts

  sonarqube:
    runs-on: ubuntu-latest
    needs: sast
    services:
      mongo:
        image: mongo:4.4
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Set up test .env file
        run: cp .env.example .env

      - name: Generate test coverage
        run: npm run test -- --coverage
        env:
          MONGODB_URI: mongodb://localhost:27017/test-db

      - name: Upload coverage to SonarCloud
        uses: sonarsource/sonarcloud-github-action@master
        with:
          projectBaseDir: .
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    runs-on: ubuntu-latest
    needs: sonarqube
    steps:
      - uses: actions/checkout@v3

      - name: Build Docker image
        run: |
          docker build -t ts-node-ci-cd-demo:${{ github.sha }} .
